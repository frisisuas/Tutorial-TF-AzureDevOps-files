{
  "variables": {
    "ADOServicePrincipalAppId": "",
    "ADOServicePrincipalSecret": "",
    "TenantId": "",
    "SubscriptionId": "",

    "ImageDestRG": "",
    "TempResourceGroup": "",

    "VirtualNetwork": "",
    "VirtualNetworkRG": "",
    "Subnet": "",

    "Location": "",
    "VMSize": "",

    "StorageAccountInstallersName": "",
    "StorageAccountInstallersKey": "",
    "StorageAccountInstallersPath": "",

    "ImagePublisher":"MicrosoftWindowsServer",
    "ImageOffer":"WindowsServer",
    "ImageSku":"2022-Datacenter",

    "Build_DefinitionName": "{{env `Build_DefinitionName`}}",
    "Build_BuildNumber": "{{env `Build_BuildNumber`}}"
  },
  "builders": [
    {
      "type": "azure-arm",

      "client_id": "{{user `ADOServicePrincipalAppId`}}",
      "client_secret": "{{user `ADOServicePrincipalSecret`}}",
      "tenant_id": "{{user `TenantId`}}",
      "subscription_id": "{{user `SubscriptionId`}}",

      "os_type": "Windows",
      "managed_image_name": "{{user `Build_DefinitionName`}}-{{isotime \"2006-01-02-1504\"}}-Build{{user `Build_BuildNumber`}}",
      "managed_image_resource_group_name": "{{user `ImageDestRG`}}",
      "temp_resource_group_name": "{{user `TempResourceGroup`}}",

      "image_publisher": "{{user `ImagePublisher`}}",
      "image_offer": "{{user `ImageOffer`}}",
      "image_sku": "{{user `ImageSku`}}",
      "communicator": "winrm",
      "winrm_use_ssl": "true",
      "winrm_insecure": "true",
      "winrm_timeout": "10m",
      "winrm_username": "packer",
      "winrm_port": "5986",

      "virtual_network_name": "{{user `VirtualNetwork`}}",
      "virtual_network_subnet_name": "{{user `Subnet`}}",
      "virtual_network_resource_group_name": "{{user `VirtualNetworkRG`}}",
      "private_virtual_network_with_public_ip": "True",
      "azure_tags": {
        "Image Publisher": "{{user `ImagePublisher`}}",
        "Image Offer": "{{user `ImageOffer`}}",
        "Image SKU": "{{user `ImageSku`}}"
      },

      "location": "{{user `Location`}}",
      "vm_size": "{{user `VMSize`}}",


      "async_resourcegroup_delete":true
    }
  ],
  "provisioners": [
    {
      "type": "powershell",
      "inline": [
        "$ErrorActionPreference='Stop'",

        "Test-NetConnection -ComputerName {{user `StorageAccountInstallersName`}}.file.core.windows.net -Port 445",
        "Import-Module -Name Smbshare -Force -Scope Local",
        "New-SmbMapping -LocalPath Z: -RemotePath \"\\\\{{user `StorageAccountInstallersName`}}.file.core.windows.net\\installers\" -Username \"Azure\\{{user `StorageAccountInstallersName`}}\" -Password \"{{user `StorageAccountInstallersKey`}}\"",
        "Write-Host \"'Z:' drive mapped\""
      ]
    },
    {
      "type": "powershell",
      "inline": [
        "powershell.exe Z:\\\\scripts\\hello_world.ps1"

      ]
    },
    {
      "type": "powershell",
      "inline": [
        "powershell.exe Z:\\\\scripts\\install_iis.ps1"
      ]
    },
    {
      "type": "powershell",
      "inline": [
        " # NOTE: the following *4* lines are only needed if the you have installed the Guest Agent.",
        "  while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "  while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }",

        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit /mode:vm",
        "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"
      ]
    }
  ]
}
